// Code generated by goa v3.16.2, DO NOT EDIT.
//
// flow HTTP server types
//
// Command:
// $ goa gen flow-editor-server/design

package server

import (
	flow "flow-editor-server/gen/flow"

	goa "goa.design/goa/v3/pkg"
)

// CreateFlowRequestBody is the type of the "flow" service "createFlow"
// endpoint HTTP request body.
type CreateFlowRequestBody struct {
	// flow 标题
	Title *string `json:"title" validate:"required,min=1,max=32"`
	// flow 数据
	Data *string `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
}

// UpdateFlowRequestBody is the type of the "flow" service "updateFlow"
// endpoint HTTP request body.
type UpdateFlowRequestBody struct {
	// flow 标题
	Title *string `json:"title" validate:"required,min=1,max=32"`
	// flow 数据
	Data *string `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
}

// GetFlowListResponseBody is the type of the "flow" service "getFlowList"
// endpoint HTTP response body.
type GetFlowListResponseBody []*FlowListItemDataResponse

// GetFlowResponseBody is the type of the "flow" service "getFlow" endpoint
// HTTP response body.
type GetFlowResponseBody struct {
	// flow id
	ID int `form:"id" json:"id" xml:"id"`
	// flow 标题
	Title string `form:"title" json:"title" xml:"title"`
	// flow 数据
	Data *string `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	// flow 创建时间
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
}

// CreateFlowResponseBody is the type of the "flow" service "createFlow"
// endpoint HTTP response body.
type CreateFlowResponseBody struct {
	// flow id
	ID int `form:"id" json:"id" xml:"id"`
	// flow 标题
	Title string `form:"title" json:"title" xml:"title"`
	// flow 数据
	Data *string `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	// flow 创建时间
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
}

// UpdateFlowResponseBody is the type of the "flow" service "updateFlow"
// endpoint HTTP response body.
type UpdateFlowResponseBody struct {
	// flow id
	ID int `form:"id" json:"id" xml:"id"`
	// flow 标题
	Title string `form:"title" json:"title" xml:"title"`
	// flow 数据
	Data *string `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	// flow 创建时间
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
}

// FlowListItemDataResponse is used to define fields on response body types.
type FlowListItemDataResponse struct {
	// flow id
	ID int `form:"id" json:"id" xml:"id"`
	// flow 标题
	Title string `form:"title" json:"title" xml:"title"`
	// flow 创建时间
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
}

// NewGetFlowListResponseBody builds the HTTP response body from the result of
// the "getFlowList" endpoint of the "flow" service.
func NewGetFlowListResponseBody(res []*flow.FlowListItemData) GetFlowListResponseBody {
	body := make([]*FlowListItemDataResponse, len(res))
	for i, val := range res {
		body[i] = marshalFlowFlowListItemDataToFlowListItemDataResponse(val)
	}
	return body
}

// NewGetFlowResponseBody builds the HTTP response body from the result of the
// "getFlow" endpoint of the "flow" service.
func NewGetFlowResponseBody(res *flow.FlowDetailData) *GetFlowResponseBody {
	body := &GetFlowResponseBody{
		ID:        res.ID,
		Title:     res.Title,
		Data:      res.Data,
		CreatedAt: res.CreatedAt,
	}
	return body
}

// NewCreateFlowResponseBody builds the HTTP response body from the result of
// the "createFlow" endpoint of the "flow" service.
func NewCreateFlowResponseBody(res *flow.FlowDetailData) *CreateFlowResponseBody {
	body := &CreateFlowResponseBody{
		ID:        res.ID,
		Title:     res.Title,
		Data:      res.Data,
		CreatedAt: res.CreatedAt,
	}
	return body
}

// NewUpdateFlowResponseBody builds the HTTP response body from the result of
// the "updateFlow" endpoint of the "flow" service.
func NewUpdateFlowResponseBody(res *flow.FlowDetailData) *UpdateFlowResponseBody {
	body := &UpdateFlowResponseBody{
		ID:        res.ID,
		Title:     res.Title,
		Data:      res.Data,
		CreatedAt: res.CreatedAt,
	}
	return body
}

// NewGetFlowListQueryFlowListParams builds a flow service getFlowList endpoint
// payload.
func NewGetFlowListQueryFlowListParams(name *string) *flow.QueryFlowListParams {
	v := &flow.QueryFlowListParams{}
	v.Name = name

	return v
}

// NewCreateFlowData builds a flow service createFlow endpoint payload.
func NewCreateFlowData(body *CreateFlowRequestBody) *flow.CreateFlowData {
	v := &flow.CreateFlowData{
		Title: *body.Title,
		Data:  body.Data,
	}

	return v
}

// NewUpdateFlowPayload builds a flow service updateFlow endpoint payload.
func NewUpdateFlowPayload(body *UpdateFlowRequestBody, id string) *flow.UpdateFlowPayload {
	v := &flow.UpdateFlowData{
		Title: body.Title,
		Data:  body.Data,
	}
	res := &flow.UpdateFlowPayload{
		Data: v,
	}
	res.ID = &id

	return res
}

// ValidateCreateFlowRequestBody runs the validations defined on
// CreateFlowRequestBody
func ValidateCreateFlowRequestBody(body *CreateFlowRequestBody) (err error) {
	if body.Title == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("title", "body"))
	}
	return
}
