// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package flow

type ConverterImpl struct{}

func (c *ConverterImpl) ConvertFlowDetail(source FlowDetail) GetFlowIdJSONBody {
	var flowGetFlowIdJSONBody GetFlowIdJSONBody
	flowGetFlowIdJSONBody.CreatedAt = TimeToString(source.CreatedAt)
	var pString *string
	if source.Edges != nil {
		xstring := *source.Edges
		pString = &xstring
	}
	flowGetFlowIdJSONBody.Edges = pString
	flowGetFlowIdJSONBody.Id = source.Id
	var pString2 *string
	if source.Nodes != nil {
		xstring2 := *source.Nodes
		pString2 = &xstring2
	}
	flowGetFlowIdJSONBody.Nodes = pString2
	flowGetFlowIdJSONBody.Title = source.Title
	return flowGetFlowIdJSONBody
}
func (c *ConverterImpl) ConvertPostFlowJSONRequestBody(source PostFlowJSONRequestBody) CreateFlowData {
	var flowCreateFlowData CreateFlowData
	flowCreateFlowData.Title = source.Title
	var pString *string
	if source.Nodes != nil {
		xstring := *source.Nodes
		pString = &xstring
	}
	flowCreateFlowData.Nodes = pString
	var pString2 *string
	if source.Edges != nil {
		xstring2 := *source.Edges
		pString2 = &xstring2
	}
	flowCreateFlowData.Edges = pString2
	return flowCreateFlowData
}
func (c *ConverterImpl) ConvertPutFlowJSONRequestBody(source PutFlowIdJSONRequestBody) UpdateFlowData {
	var flowUpdateFlowData UpdateFlowData
	flowUpdateFlowData.Id = source.Id
	flowUpdateFlowData.Title = source.Title
	var pString *string
	if source.Nodes != nil {
		xstring := *source.Nodes
		pString = &xstring
	}
	flowUpdateFlowData.Nodes = pString
	var pString2 *string
	if source.Edges != nil {
		xstring2 := *source.Edges
		pString2 = &xstring2
	}
	flowUpdateFlowData.Edges = pString2
	return flowUpdateFlowData
}
func (c *ConverterImpl) ConvertSliceFlowListItem(source []FlowListItem) []FlowListObject {
	var flowFlowListObjectList []FlowListObject
	if source != nil {
		flowFlowListObjectList = make([]FlowListObject, len(source))
		for i := 0; i < len(source); i++ {
			flowFlowListObjectList[i] = c.flowFlowListItemToFlowFlowListObject(source[i])
		}
	}
	return flowFlowListObjectList
}
func (c *ConverterImpl) flowFlowListItemToFlowFlowListObject(source FlowListItem) FlowListObject {
	var flowFlowListObject FlowListObject
	flowFlowListObject.CreatedAt = TimeToString(source.CreatedAt)
	flowFlowListObject.Id = source.Id
	flowFlowListObject.Title = source.Title
	return flowFlowListObject
}
