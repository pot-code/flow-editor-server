// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package flow

type ConverterImpl struct{}

func (c *ConverterImpl) ConvertFlowModel(source FlowModel) FlowDetailOutput {
	var flowFlowDetailOutput FlowDetailOutput
	flowFlowDetailOutput.Id = UintToInt(source.Model.ID)
	flowFlowDetailOutput.Title = source.Title
	var pString *string
	if source.Nodes != nil {
		xstring := *source.Nodes
		pString = &xstring
	}
	flowFlowDetailOutput.Nodes = pString
	var pString2 *string
	if source.Edges != nil {
		xstring2 := *source.Edges
		pString2 = &xstring2
	}
	flowFlowDetailOutput.Edges = pString2
	flowFlowDetailOutput.CreatedAt = TimeToString(source.Model.CreatedAt)
	return flowFlowDetailOutput
}
func (c *ConverterImpl) ConvertFlowModels(source []FlowModel) []FlowListObjectOutput {
	var flowFlowListObjectOutputList []FlowListObjectOutput
	if source != nil {
		flowFlowListObjectOutputList = make([]FlowListObjectOutput, len(source))
		for i := 0; i < len(source); i++ {
			flowFlowListObjectOutputList[i] = c.ConverterFlowModel(source[i])
		}
	}
	return flowFlowListObjectOutputList
}
func (c *ConverterImpl) ConverterFlowModel(source FlowModel) FlowListObjectOutput {
	var flowFlowListObjectOutput FlowListObjectOutput
	flowFlowListObjectOutput.Id = UintToInt(source.Model.ID)
	flowFlowListObjectOutput.Title = source.Title
	flowFlowListObjectOutput.CreatedAt = TimeToString(source.Model.CreatedAt)
	return flowFlowListObjectOutput
}
