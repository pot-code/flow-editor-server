services:
  cerbos:
    image: ghcr.io/cerbos/cerbos:0.36.0
    ports:
      - "3592:3592"
      - "3593:3593"
    volumes:
      - "../policy:/policies"
      - "./config/cerbos.yaml:/config/cerbos.yaml"
    command: [server, --config=config/cerbos.yaml]

  promtail:
    image: grafana/promtail
    ports:
      - "9080:9080"
    volumes:
      - "./config/promtail.yaml:/mnt/config/promtail.yaml"
      - "../logs:/var/log"
    command: [--config.file=/mnt/config/promtail.yaml]
    networks:
      - dev

  zitadel:
    restart: "always"
    networks:
      - dev
    image: "ghcr.io/zitadel/zitadel:latest"
    command:
      [
        start-from-init,
        --masterkey,
        MasterkeyNeedsToHave32Characters,
        --tlsMode,
        disabled,
        --config,
        /mnt/config/zitadel.yaml,
      ]
    environment:
      - "ZITADEL_EXTERNALSECURE=false"
    volumes:
      - "./config/zitadel.yaml:/mnt/config/zitadel.yaml"
    depends_on:
      db:
        condition: "service_healthy"
    ports:
      - "8080:8080"

  db:
    restart: "always"
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=zitadel
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgres"]
      interval: "10s"
      timeout: "30s"
      retries: 5
      start_period: "20s"
    ports:
      - "5432:5432"

  grafana:
    image: grafana/grafana-enterprise
    ports:
      - 3000:3000
    networks:
      - dev
    volumes:
      - "./config/grafana/provisioning:/etc/grafana/provisioning"

  loki:
    image: grafana/loki
    ports:
      - 3100:3100
    networks:
      - dev
    volumes:
      - "./config/loki.yaml:/mnt/config/loki.yaml"
    command: -config.file=/mnt/config/loki.yaml

  tempo:
    image: grafana/tempo
    ports:
      - "3200:3200" # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
    networks:
      - dev
    volumes:
      - "./config/tempo.yaml:/mnt/config/tempo.yaml"
    command: -config.file=/mnt/config/tempo.yaml

networks:
  dev:
